// <auto-generated />
using System;
using COSLApplications.Server.Date;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COSLApplications.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("COSLApplications.Shared.Models.EvidenceDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileOnServer")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HSEIncidentsModelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IncidentID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("IncidentVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LinkAddress")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Supplier")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HSEIncidentsModelId");

                    b.ToTable("EvidenceDoc");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.HSEIncidentsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Contractor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorManager")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorManagerContact")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerRep")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerRepContact")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Field")
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldHSE")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldHSEContact")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldManagerContact")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldManagers")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int>("FinalIncidentClass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FinalLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IncidentID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IncidentTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("IncidentVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("NPTCost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NPTLost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpsSite")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportPerson")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReportTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteCondition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("WeatherCondition")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IncidentID", "IncidentVersion")
                        .IsUnique();

                    b.ToTable("HSEIncidentsModel", "dbo");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.IncidentsDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Analyzation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Approved")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FellowUp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HSEIncidentsModelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImmediateAction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IncidentID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("IncidentVersion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RootCause")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HSEIncidentsModelId");

                    b.ToTable("IncidentsDetails");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CertNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Expir")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainingCenter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserModelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("Training", "dbo");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItGroup")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OfficePosition")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("UserModel", "dbo");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.EvidenceDoc", b =>
                {
                    b.HasOne("COSLApplications.Shared.Models.HSEIncidentsModel", null)
                        .WithMany("EvidenceDoc")
                        .HasForeignKey("HSEIncidentsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.IncidentsDetails", b =>
                {
                    b.HasOne("COSLApplications.Shared.Models.HSEIncidentsModel", null)
                        .WithMany("IncidentsDetails")
                        .HasForeignKey("HSEIncidentsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.Training", b =>
                {
                    b.HasOne("COSLApplications.Shared.Models.UserModel", null)
                        .WithMany("IncidentsDetails")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.HSEIncidentsModel", b =>
                {
                    b.Navigation("EvidenceDoc");

                    b.Navigation("IncidentsDetails");
                });

            modelBuilder.Entity("COSLApplications.Shared.Models.UserModel", b =>
                {
                    b.Navigation("IncidentsDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
